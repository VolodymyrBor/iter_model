[tool.poetry]
name = "iter_model"
version = "2.3.0"
description = "iter-model uses a method approach instead of individual functions to work with iterable objects."
authors = ["volodymyrb <volodymyr.borysiuk0@gmail.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://volodymyrbor.github.io/iter_model/"
repository = "https://github.com/VolodymyrBor/iter_model"
documentation = "https://volodymyrbor.github.io/iter_model/"
keywords = ["iterator", "iterable"]

[tool.poetry.dependencies]
python = "^3.10"

[tool.poetry.group.dev.dependencies]
pytest = "^7.1.3"
pytest-asyncio = "^0.19.0"
pytest-cov = "^3.0.0"
pytest-mypy = "^0.9.1"
mkdocs-material = "^9.4.10"
mkdocstrings = {extras = ["python"], version = "^0.24.0"}
ruff = "^0.1.6"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

packages = [
    {include = "iter_model"},
]

[tool.pytest.ini_options]
asyncio_mode = "auto"

[tool.ruff]
line-length = 120
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "UP",  # pyupgrade
]
ignore = [
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "I001",  # import format
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
